// Top-level build file where you can add configuration options common to all sub-projects/modules.
buildscript {
    ext {
        compose_version = '1.5.8'
        kotlin_version = '1.9.22'
        hilt_version = '2.48.1'
        room_version = '2.6.1'
    }
    
    dependencies {
        classpath 'com.android.tools.build:gradle:8.2.2'
        classpath "org.jetbrains.kotlin:kotlin-gradle-plugin:$kotlin_version"
        classpath "com.google.dagger:hilt-android-gradle-plugin:$hilt_version"
        classpath 'org.jetbrains.kotlin:kotlin-serialization:1.9.22'
        classpath 'org.jetbrains.kotlinx:kover-gradle-plugin:0.7.5'
        classpath 'io.gitlab.arturbosch.detekt:detekt-gradle-plugin:1.23.5'
        classpath 'org.jlleitschuh.gradle:ktlint-gradle:12.1.0'
        classpath 'org.cyclonedx:cyclonedx-gradle-plugin:1.8.2'
    }
}

plugins {
    id 'com.android.application' version '8.2.2' apply false
    id 'com.android.library' version '8.2.2' apply false
    id 'org.jetbrains.kotlin.android' version '1.9.22' apply false
    id 'com.google.dagger.hilt.android' version '2.48.1' apply false
    id 'org.jetbrains.kotlin.plugin.serialization' version '1.9.22' apply false
    id 'org.jetbrains.kotlinx.kover' version '0.7.5' apply false
    id 'io.gitlab.arturbosch.detekt' version '1.23.5' apply false
    id 'org.jlleitschuh.gradle.ktlint' version '12.1.0' apply false
    id 'org.cyclonedx.bom' version '1.8.2' apply false
}

allprojects {
    repositories {
        google()
        mavenCentral()
        gradlePluginPortal()
    }
}

// Global configuration
subprojects {
    apply plugin: 'org.jlleitschuh.gradle.ktlint'
    apply plugin: 'io.gitlab.arturbosch.detekt'

    ktlint {
        android = true
        ignoreFailures = false
    }

    detekt {
        buildUponDefaultConfig = true
        allRules = false
        config = files("$rootDir/config/detekt/detekt.yml")
    }
}

// Clean task
task clean(type: Delete) {
    delete rootProject.buildDir
}

// Custom tasks
task generateModuleTemplates {
    doLast {
        def modules = [
            'collecte-metrics', 'stockage-donnees', 'moteur-regles', 'ia-ml',
            'automations-playbooks', 'securite-permissions', 'configuration-flags',
            'observabilite-logs', 'ui-ux', 'privacy-compliance'
        ]
        
        modules.each { moduleName ->
            def moduleDir = file("modules/$moduleName")
            moduleDir.mkdirs()
            
            def buildFile = file("$moduleDir/build.gradle")
            if (!buildFile.exists()) {
                buildFile.text = generateModuleBuildGradle(moduleName)
            }
        }
    }
}

def generateModuleBuildGradle(String moduleName) {
    return """
plugins {
    id 'com.android.library'
    id 'org.jetbrains.kotlin.android'
    id 'kotlin-kapt'
    id 'dagger.hilt.android.plugin'
    id 'kotlin-parcelize'
    id 'kover'
}

android {
    namespace 'com.neuralbeginner.pococare.${moduleName.replace('-', '')}'
    compileSdk 34

    defaultConfig {
        minSdk 28
        testInstrumentationRunner "androidx.test.runner.AndroidJUnitRunner"
        consumerProguardFiles "consumer-rules.pro"
    }

    buildTypes {
        release {
            minifyEnabled false
            proguardFiles getDefaultProguardFile('proguard-android-optimize.txt'), 'proguard-rules.pro'
        }
    }

    compileOptions {
        sourceCompatibility JavaVersion.VERSION_17
        targetCompatibility JavaVersion.VERSION_17
    }

    kotlinOptions {
        jvmTarget = '17'
    }

    buildFeatures {
        compose true
    }

    composeOptions {
        kotlinCompilerExtensionVersion = "1.5.8"
    }
}

dependencies {
    implementation 'androidx.core:core-ktx:1.12.0'
    implementation 'androidx.lifecycle:lifecycle-runtime-ktx:2.7.0'
    
    // Compose
    implementation platform('androidx.compose:compose-bom:2024.02.00')
    implementation 'androidx.compose.ui:ui'
    implementation 'androidx.compose.material3:material3'
    
    // Hilt
    implementation 'com.google.dagger:hilt-android:2.48.1'
    kapt 'com.google.dagger:hilt-compiler:2.48.1'
    
    // Coroutines
    implementation 'org.jetbrains.kotlinx:kotlinx-coroutines-android:1.7.3'
    
    // Testing
    testImplementation 'junit:junit:4.13.2'
    testImplementation 'org.jetbrains.kotlinx:kotlinx-coroutines-test:1.7.3'
    testImplementation 'com.google.truth:truth:1.4.0'
    testImplementation 'io.mockk:mockk:1.13.8'
    
    androidTestImplementation 'androidx.test.ext:junit:1.1.5'
    androidTestImplementation 'androidx.test.espresso:espresso-core:3.5.1'
}
""".trim()
}